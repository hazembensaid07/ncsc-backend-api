name: NCSC  CI_CD

on:
  push:
    branches: [production]
  pull_request:
    branches: [production]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm  run test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push node
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: hazem06/ncsc_backend:node-app-release-1.0
      - name: Build and push nginx
        uses: docker/build-push-action@v2
        with:
          context: ./nginx/
          push: true
          tags: hazem06/ncsc_backend:nginx-latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: deploy to ec2 instance
        env:
          AWS_EC2_PEM: ${{ secrets.AWS_EC2_PEM  }}
          AWS_EC2_PUBLIC_IP: ${{ secrets.AWS_EC2_PUBLIC_IP  }}
          AWS_EC2_USERNAME: ${{ secrets.AWS_EC2_USERNAME  }}
        run: |
          echo "$AWS_EC2_PEM" > private_key && chmod 600 private_key
          scp server-cmd.sh  ${{ secrets.AWS_EC2_USERNAME  }}@${{ secrets.AWS_EC2_PUBLIC_IP  }}:/home/ubuntu
          scp  docker-compose.yml {{ secrets.AWS_EC2_USERNAME  }}@${{ secrets.AWS_EC2_PUBLIC_IP  }}:/home/ubuntu
          ssh -o StrictHostKeyChecking=no -i private_key ${AWS_EC2_USERNAME}@${AWS_EC2_PUBLIC_IP} '
            bash ./server-cmd.sh hazem06/ncsc_backend:node-app-release-1.0'
