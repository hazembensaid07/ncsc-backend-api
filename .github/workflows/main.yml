name: NCSC  CI_CD

on:
  push:
    branches: []

jobs:
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push node
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: hazem06/ncsc_backend:node-app-release-1.0

  #deploy:
  # runs-on: ubuntu-latest
  #needs: build
  #steps:
  # - name: Checkout
  #  uses: actions/checkout@v2
  #- name: Make envfile
  # uses: SpicyPizza/create-envfile@v1.3
  #with:
  # envkey_SECRET_KEY: ${{ secrets.AWS_EC2_PUBLIC_IP }}
  #directory: .
  #file_name: .env
  #fail_on_empty: false
  #- name: copy files via ssh key
  # uses: appleboy/scp-action@master
  #with:
  # host: ${{ secrets.AWS_EC2_PUBLIC_IP  }}
  #username: ${{ secrets.AWS_EC2_USERNAME  }}
  #port: 22
  #key: ${{ secrets.AWS_EC2_PEM  }}
  #source: "server-cmd.sh ,docker-compose.yml "
  #target: "/home/ubuntu"
  #- name: deploy to ec2 instance and  run compose
  # env:
  #  AWS_EC2_PEM: ${{ secrets.AWS_EC2_PEM  }}
  #AWS_EC2_PUBLIC_IP: ${{ secrets.AWS_EC2_PUBLIC_IP  }}
  #AWS_EC2_USERNAME: ${{ secrets.AWS_EC2_USERNAME  }}
  #run: |
  # echo "$AWS_EC2_PEM" > private_key.pem  && chmod 600 private_key.pem
  #ssh -o StrictHostKeyChecking=no -i private_key.pem ${AWS_EC2_USERNAME}@${AWS_EC2_PUBLIC_IP} '
  # bash ./server-cmd.sh hazem06/ncsc_backend:node-app-release-1.0'
